local bufnr = vim.api.nvim_get_current_buf()
local function desc(description)
    return { noremap = true, silent = true, buffer = bufnr, desc = description }
end

vim.keymap.set('n', '<leader>vdd', function()
    vim.cmd.RustLsp('debuggables')
end, desc('[dd]ebuggables'))
vim.keymap.set('n', '<leader>vdl', function()
    vim.cmd.RustLsp { 'debuggables', bang = true }
end, desc('run [d]ebuggables [l]ast'))
vim.keymap.set('n', '<leader>vr', function()
    vim.cmd.RustLsp('runnables')
end, desc('[r]unnables'))
vim.keymap.set('n', '<leader>vl', function()
    vim.cmd.RustLsp { 'runnables', bang = true }
end, desc('[r]unnables [l]ast'))
vim.keymap.set('n', '<leader>vtt', function()
    vim.cmd.RustLsp('testables')
end, desc('[t]es[t]ables'))
vim.keymap.set('n', '<leader>vtl', function()
    vim.cmd.RustLsp { 'testables', bang = true }
end, desc('run [t]estables [l]ast'))
vim.keymap.set('n', '<leader>vme', function()
    vim.cmd.RustLsp('expandMacro')
end, desc('[m]acro [e]xpand'))
vim.keymap.set('n', '<leader>vk', function()
    vim.cmd.RustLsp { 'moveItem', 'up' }
end, desc('move item up [k]'))
vim.keymap.set('n', '<leader>vj', function()
    vim.cmd.RustLsp { 'moveItem', 'down' }
end, desc('move item down [j]'))
vim.keymap.set('n', '<leader>ve', function()
    vim.cmd.RustLsp('explainError')
end, desc('[e]xplain error'))
vim.keymap.set('n', '<leader>vca', function()
    vim.cmd.RustLsp('codeAction')
end, desc('[c]ode [a]ction'))
vim.keymap.set('n', '<leader>vrd', function()
    vim.cmd.RustLsp('renderDiagnostic')
end, desc('[r]ender [d]iagnostic'))
vim.keymap.set('n', '<leader>vgc', function()
    vim.cmd.RustLsp('openCargo')
end, desc('[g]o to [c]argo.toml'))
vim.keymap.set('n', '<leader>vgp', function()
    vim.cmd.RustLsp('parentModule')
end, desc('[g]o to [p]arent module'))
vim.keymap.set('n', 'J', function()
    vim.cmd.RustLsp('joinLines')
end, desc('join lines'))
vim.keymap.set('n', '<leader>vs', function()
    vim.cmd.RustLsp('ssr')
end, desc('[s]sr'))
